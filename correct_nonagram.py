ss = 5
nn = [["-", "-", "-", "-", "-", "-", "-", "-"],
                 ["-", "-", "-", "2", "2", "1", "-", "1"],
                 ["-", "-", "-", "2", "1", "1", "3", "3"],
                 ["-", "3", "1", "#", "#", "#", ".", "#"],
                 ["-", "-", "2", "#", "#", ".", ".", "."],
                 ["-", "-", "2", ".", ".", ".", "#", "#"],
                 ["-", "1", "2", "#", ".", ".", "#", "#"],
                 ["-", "-", "5", "#", "#", "#", "#", "#"]]

nn_f = [["-", "-", "-", "-", "-", "-", "-", "-"],
                 ["-", "-", "-", "-", "-", "1", "-", "-"],
                 ["-", "-", "-", "3", "3", "2", "5", "5"],
                 ["-", "-", "3", ".", ".", ".", "#", "#"],
                 ["-", "2", "2", "#", "#", "#", "#", "#"],
                 ["-", "-", "5", "#", "#", "#", "#", "#"],
                 ["-", "-", "5", "#", "#", "#", "#", "#"],
                 ["-", "-", "2", ".", ".", ".", "#", "#"]]

def valid(req, data):
    return [r for r in req if r != '-'] == ['{0}'.format(len(g)) for g in ''.join(data).split('.') if g != '']


def correctNonogram(size, nonogramField):
    a = (size+1)/2

    n = nonogramField
    return all([valid(n[a+s][:a], n[a+s][a:]) for s in range(size)]) and \
           all([valid([row[a+s] for row in n[:a]], [row[a+s] for row in n[a:]]) for s in range(size)])


print correctNonogram(ss, nn_f)